#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions(macOS)
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

#==========================
# 工作流的名字（随便写）
name: mac_openwrt_acrh17
#==========================
env:
  #==========================
  # 编译前运行的脚本
  DIY_SH: diy.sh
  #==========================
  # Specify here the OpenWrt Repo URL and Branch
  # 在这里指定你的OpenWrt的仓库地址URL和分支
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  #==========================
  # Specify here your config file
  # 在这里指定你的配置文件名
  CONFIG_FILE: "acrh17mac.config"
  #==========================
on:
  push:
    paths:
      #==========================
      - "acrh17mac.config"
      # 改成和上方CONFIG_FILE 一样
      #==========================
    branches:
      - master
#==========================
#取消下方注释 = 发布release就编译
#  release:
#    types: [published]
#==========================
#取消下方注释 = 每天凌晨4点编译
#  schedule:
#    - cron: 0 20 * * *
#==========================
#取消下方注释 = 点[★star]一键编译
#  watch:
#    types: [started]
#==========================

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout 抓取当前仓库
        uses: actions/checkout@master

      - name: Initialization environment 初始化
        run: |
          brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep wget quilt xz gnu-sed
          echo "::add-path::/usr/local/opt/gnu-getopt/bin"
          echo "::add-path::/usr/local/opt/coreutils/libexec/gnubin"
          echo "::add-path::/usr/local/opt/gnu-sed/libexec/gnubin"
          hdiutil create -size 60g -type SPARSE -fs "Case-sensitive HFS+" -volname OpenWrt OpenWrt.sparseimage
          hdiutil attach OpenWrt.sparseimage
          curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
          sudo systemsetup -settimezone "Asia/Shanghai"

      - name: Clone source code 抓取仓库
        working-directory: /Volumes/OpenWrt
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /Volumes/OpenWrt/openwrt $GITHUB_WORKSPACE/openwrt
          sed -i "s/grep Apple.LLVM/grep -E 'Apple.(LLVM|clang)'/g" openwrt/include/prereq-build.mk

      - name: Update feeds 更新feeds
        run: cd openwrt && ./scripts/feeds update -a

      - name: Install feeds 安装feeds
        run: cd openwrt && ./scripts/feeds install -a

      - name: Load custom configuration 读取自定义配置
        run: |
          [ -e files ] && mv files openwrt/files
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_SH
          mv $DIY_SH openwrt
          cd openwrt
          ./$DIY_SH
          make defconfig

      - name: Download package 下载插件资源
        run: |
          cd openwrt && make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Build 开始编译
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 V=s

      - name: Upload bin directory 上传bin文件夹
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_bin bin文件夹
          path: openwrt/bin

      - name: Organize files 整理文件
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "::set-env name=FIRMWARE::$(pwd)"

      - name: Upload firmware 上传固件
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware openwrt固件
          path: ${{ env.FIRMWARE }}
